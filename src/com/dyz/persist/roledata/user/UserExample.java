package com.dyz.persist.roledata.user;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public UserExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    protected UserExample(UserExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("f_id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("f_id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("f_id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("f_id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("f_id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("f_id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("f_id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("f_id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("f_id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("f_id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("f_id not between", value1, value2, "id");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("f_name is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("f_name is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("f_name =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("f_name <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("f_name >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("f_name >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("f_name <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("f_name <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("f_name like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("f_name not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("f_name in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("f_name not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("f_name between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("f_name not between", value1, value2, "name");
            return this;
        }

        public Criteria andPhonenumberIsNull() {
            addCriterion("f_phonenumber is null");
            return this;
        }

        public Criteria andPhonenumberIsNotNull() {
            addCriterion("f_phonenumber is not null");
            return this;
        }

        public Criteria andPhonenumberEqualTo(String value) {
            addCriterion("f_phonenumber =", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberNotEqualTo(String value) {
            addCriterion("f_phonenumber <>", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberGreaterThan(String value) {
            addCriterion("f_phonenumber >", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberGreaterThanOrEqualTo(String value) {
            addCriterion("f_phonenumber >=", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberLessThan(String value) {
            addCriterion("f_phonenumber <", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberLessThanOrEqualTo(String value) {
            addCriterion("f_phonenumber <=", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberLike(String value) {
            addCriterion("f_phonenumber like", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberNotLike(String value) {
            addCriterion("f_phonenumber not like", value, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberIn(List values) {
            addCriterion("f_phonenumber in", values, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberNotIn(List values) {
            addCriterion("f_phonenumber not in", values, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberBetween(String value1, String value2) {
            addCriterion("f_phonenumber between", value1, value2, "phonenumber");
            return this;
        }

        public Criteria andPhonenumberNotBetween(String value1, String value2) {
            addCriterion("f_phonenumber not between", value1, value2, "phonenumber");
            return this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("f_email is null");
            return this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("f_email is not null");
            return this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("f_email =", value, "email");
            return this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("f_email <>", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("f_email >", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("f_email >=", value, "email");
            return this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("f_email <", value, "email");
            return this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("f_email <=", value, "email");
            return this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("f_email like", value, "email");
            return this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("f_email not like", value, "email");
            return this;
        }

        public Criteria andEmailIn(List values) {
            addCriterion("f_email in", values, "email");
            return this;
        }

        public Criteria andEmailNotIn(List values) {
            addCriterion("f_email not in", values, "email");
            return this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("f_email between", value1, value2, "email");
            return this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("f_email not between", value1, value2, "email");
            return this;
        }

        public Criteria andPasswdIsNull() {
            addCriterion("f_passwd is null");
            return this;
        }

        public Criteria andPasswdIsNotNull() {
            addCriterion("f_passwd is not null");
            return this;
        }

        public Criteria andPasswdEqualTo(String value) {
            addCriterion("f_passwd =", value, "passwd");
            return this;
        }

        public Criteria andPasswdNotEqualTo(String value) {
            addCriterion("f_passwd <>", value, "passwd");
            return this;
        }

        public Criteria andPasswdGreaterThan(String value) {
            addCriterion("f_passwd >", value, "passwd");
            return this;
        }

        public Criteria andPasswdGreaterThanOrEqualTo(String value) {
            addCriterion("f_passwd >=", value, "passwd");
            return this;
        }

        public Criteria andPasswdLessThan(String value) {
            addCriterion("f_passwd <", value, "passwd");
            return this;
        }

        public Criteria andPasswdLessThanOrEqualTo(String value) {
            addCriterion("f_passwd <=", value, "passwd");
            return this;
        }

        public Criteria andPasswdLike(String value) {
            addCriterion("f_passwd like", value, "passwd");
            return this;
        }

        public Criteria andPasswdNotLike(String value) {
            addCriterion("f_passwd not like", value, "passwd");
            return this;
        }

        public Criteria andPasswdIn(List values) {
            addCriterion("f_passwd in", values, "passwd");
            return this;
        }

        public Criteria andPasswdNotIn(List values) {
            addCriterion("f_passwd not in", values, "passwd");
            return this;
        }

        public Criteria andPasswdBetween(String value1, String value2) {
            addCriterion("f_passwd between", value1, value2, "passwd");
            return this;
        }

        public Criteria andPasswdNotBetween(String value1, String value2) {
            addCriterion("f_passwd not between", value1, value2, "passwd");
            return this;
        }

        public Criteria andRegdateIsNull() {
            addCriterion("f_regdate is null");
            return this;
        }

        public Criteria andRegdateIsNotNull() {
            addCriterion("f_regdate is not null");
            return this;
        }

        public Criteria andRegdateEqualTo(Long value) {
            addCriterion("f_regdate =", value, "regdate");
            return this;
        }

        public Criteria andRegdateNotEqualTo(Long value) {
            addCriterion("f_regdate <>", value, "regdate");
            return this;
        }

        public Criteria andRegdateGreaterThan(Long value) {
            addCriterion("f_regdate >", value, "regdate");
            return this;
        }

        public Criteria andRegdateGreaterThanOrEqualTo(Long value) {
            addCriterion("f_regdate >=", value, "regdate");
            return this;
        }

        public Criteria andRegdateLessThan(Long value) {
            addCriterion("f_regdate <", value, "regdate");
            return this;
        }

        public Criteria andRegdateLessThanOrEqualTo(Long value) {
            addCriterion("f_regdate <=", value, "regdate");
            return this;
        }

        public Criteria andRegdateIn(List values) {
            addCriterion("f_regdate in", values, "regdate");
            return this;
        }

        public Criteria andRegdateNotIn(List values) {
            addCriterion("f_regdate not in", values, "regdate");
            return this;
        }

        public Criteria andRegdateBetween(Long value1, Long value2) {
            addCriterion("f_regdate between", value1, value2, "regdate");
            return this;
        }

        public Criteria andRegdateNotBetween(Long value1, Long value2) {
            addCriterion("f_regdate not between", value1, value2, "regdate");
            return this;
        }
    }
}