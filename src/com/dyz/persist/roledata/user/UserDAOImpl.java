package com.dyz.persist.roledata.user;

import com.dyz.persist.roledata.user.User;
import com.dyz.persist.roledata.user.UserExample;
import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;
import java.util.List;

public class UserDAOImpl implements UserDAO {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public UserDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int countByExample(UserExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("t_user.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int deleteByExample(UserExample example) throws SQLException {
        int rows = sqlMapClient.delete("t_user.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        User key = new User();
        key.setId(id);
        int rows = sqlMapClient.delete("t_user.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public void insert(User record) throws SQLException {
        sqlMapClient.insert("t_user.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public void insertSelective(User record) throws SQLException {
        sqlMapClient.insert("t_user.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public List selectByExample(UserExample example) throws SQLException {
        List list = sqlMapClient.queryForList("t_user.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public User selectByPrimaryKey(Integer id) throws SQLException {
        User key = new User();
        key.setId(id);
        User record = (User) sqlMapClient.queryForObject("t_user.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int updateByExampleSelective(User record, UserExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("t_user.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int updateByExample(User record, UserExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("t_user.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int updateByPrimaryKeySelective(User record) throws SQLException {
        int rows = sqlMapClient.update("t_user.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    public int updateByPrimaryKey(User record) throws SQLException {
        int rows = sqlMapClient.update("t_user.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_user
     *
     * @ibatorgenerated Fri Jan 30 10:52:50 CST 2015
     */
    private static class UpdateByExampleParms extends UserExample {
        private Object record;

        public UpdateByExampleParms(Object record, UserExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@Override
	public void insertForId(User user) throws SQLException {
		sqlMapClient.insert("t_user.customizationInsert", user);
	}
}